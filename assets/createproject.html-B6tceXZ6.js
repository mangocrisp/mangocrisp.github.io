import{_ as t,r as n,c as l,e as s,b as e,o as p}from"./app-YJLVW2Ql.js";const r="/assets/images/blog/newProject1.png",o="/assets/images/blog/addarchetype.png",c="/assets/images/blog/addarchetype2.png",d="/assets/images/blog/newpfoject1complete.png",h="/assets/images/blog/fixpom.xml.png",g="/assets/images/blog/vmparams.png",m="/assets/images/blog/startsuccess.png",k="/assets/images/blog/loginsuccess.png",b="/assets/images/blog/startservices.png",u="/assets/images/blog/startsuccess2.png",y={};function v(f,i){const a=n("VPBanner");return p(),l("div",null,[i[0]||(i[0]=s('<h1 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h1><div class="hint-container tip"><p class="hint-container-title">提示</p><p>首先要搞清楚要创建的项目是怎样的一个体量，如果不是特别大的项目，就没必要上微服务，再有，如果不确定，也可以是先单体架构，这样前期好修改和维护，后面如果业务量上来了，模块更多了，再考虑升级微服务</p></div><h2 id="使用模板创建项目" tabindex="-1"><a class="header-anchor" href="#使用模板创建项目"><span>使用模板创建项目</span></a></h2><figure><img src="'+r+'" alt="新建项目" tabindex="0" loading="lazy"><figcaption>新建项目</figcaption></figure><p>说明：</p><ol><li>项目文件夹的名称</li><li>项目存放的路径</li></ol><div class="hint-container warning"><p class="hint-container-title">注意</p><p>文件夹名尽量都使用英文</p></div><ol start="3"><li><p>如果是 2.7.x 就选择 jdk8，如果是 3.2.x 就选择 jdk17</p></li><li><p>添加模板</p><figure><img src="'+o+'" alt="添加模板" tabindex="0" loading="lazy"><figcaption>添加模板</figcaption></figure><div class="hint-container info"><p class="hint-container-title">版本的信息</p><ol><li><p>GroupId: io.github.mangocrisp<br> 这个是固定的组</p></li><li><p>ArtifactId: spring-taybct-single-archetype<br> 这个根据实际需求来，如果是单体架构就是 <code>spring-taybct-single-archetype</code>，如果是微服务就先 <code>spring-taybct-cloud-archetype</code></p></li><li><p>Version: 3.2.0-alpha.1<br> 版本号，目前只有两种版本号：以 <code>3.2.*</code> 开头的 <code>3.2.x</code> 版本，以及 <code>2.7.*</code> 开头的 <code>2.7.x</code> 版本，分别对应了 <code>Spring Boot</code> <code>3.2.x</code> 和 <code>2.7.x</code> 版本</p></li></ol></div><p>填完点 Add</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>或者选择 Catalog，选择 Maven Central,然后输入<code>io.github.mangocrisp:spring-taybct-single-archetype</code>，Version 选择<code>3.2.0-alpha.1</code></p></div><figure><img src="'+c+'" alt="添加模板" tabindex="0" loading="lazy"><figcaption>添加模板</figcaption></figure></li><li><p>这里这个 GroupId,推荐是使用默认的 io.github.mangocrisp，如果使用其他的 GroupId，就需要修改一些依赖相关的代码</p></li><li><p>项目名</p></li><li><p>版本号</p></li></ol><p>点击 Create，就能自动创建项目了</p><figure><img src="'+d+'" alt="创建完成" tabindex="0" loading="lazy"><figcaption>创建完成</figcaption></figure><details class="hint-container details"><summary>如果 Maven 提示报错了，可以参考这个</summary><p>汗，当时提交模板的时候忘了改版本号了，所以这里的 pom.xml 默认一开始是 <code>${project.version}</code>，新建的项目怎么可能是<code>3.2.0-alpha.1</code>嘛，所以<code>3.2.0-alpha.1</code>版本的模板创建完成之后需要修改一下 pom.xml 文件，也只有 <code>spring-taybct-single</code> 的 <code>3.2.0-alpha.1</code> 和 <code>2.7.0-alpha.1</code> 版本有这样的问题，后面就没这样的问题了<br><img src="'+h+'" alt="修改 pom.xml" loading="lazy"><br> 此时需要点击重新加载 Maven 依赖</p></details><h2 id="直接下载源码" tabindex="-1"><a class="header-anchor" href="#直接下载源码"><span>直接下载源码</span></a></h2>',12)),e(a,{title:"Spring TayBct Single",content:"Spring 业务组件基础集成的基础业务（单体架构），对一些常用的系统管理，用户体系等基础功能做了基础的常用的简易的集成，并且提供一些业务开发过程中常用的功能模块集成",actions:[{text:"GitHub",link:"https://github.com/mangocrisp/spring-taybct-single"},{text:"GitLab",link:"https://gitlab.com/mangocrisp/spring-taybct-single",type:"default"}]}),e(a,{title:"Spring TayBct Cloud",content:"Spring 业务组件基础集成的基础业务（微服务架构），对一些常用的系统管理，用户体系等基础功能做了基础的常用的简易的集成，并且提供一些业务开发过程中常用的功能模块集成",actions:[{text:"GitHub",link:"https://github.com/mangocrisp/spring-taybct-cloud"},{text:"GitLab",link:"https://gitlab.com/mangocrisp/spring-taybct-cloud",type:"default"}]}),i[1]||(i[1]=s('<h2 id="启动项目-single" tabindex="-1"><a class="header-anchor" href="#启动项目-single"><span>启动项目（Single）</span></a></h2><h3 id="_1-启动前先添加启动-jvm-参数-仅-jdk-17" tabindex="-1"><a class="header-anchor" href="#_1-启动前先添加启动-jvm-参数-仅-jdk-17"><span>1. 启动前先添加启动 JVM 参数（仅 JDK 17）</span></a></h3><figure><img src="'+g+`" alt="添加 JVM 参数" tabindex="0" loading="lazy"><figcaption>添加 JVM 参数</figcaption></figure><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-Dmaven.wagon.http.ssl.insecure</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">true</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-Dmaven.wagon.http.ssl.allowall</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">true</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--add-opens</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java.base/java.lang</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=ALL-UNNAMED</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--add-opens</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java.base/java.util</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=ALL-UNNAMED</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--add-opens</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java.base/java.nio</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=ALL-UNNAMED</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--add-opens</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java.base/sun.nio.ch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=ALL-UNNAMED</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--add-opens</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java.base/java.lang.reflect</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=ALL-UNNAMED</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>点击 OK</p><h3 id="_2-启动" tabindex="-1"><a class="header-anchor" href="#_2-启动"><span>2. 启动</span></a></h3><figure><img src="`+m+`" alt="启动成功 🎉🎉🎉" tabindex="0" loading="lazy"><figcaption>启动成功 🎉🎉🎉</figcaption></figure><p>启动成功如上图</p><h3 id="_3-验证" tabindex="-1"><a class="header-anchor" href="#_3-验证"><span>3. 验证</span></a></h3><ul><li><p>swagger 后端接口文档：浏览器打开 <a href="http://127.0.0.1:9102/doc.html" target="_blank" rel="noopener noreferrer">http://127.0.0.1:9102/doc.html</a></p></li><li><p>ApiFox 调试登录接口：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --location</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --request</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> POST</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;http://localhost:9102/auth/oauth/login&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--header </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;User-Agent: Apifox/1.0.0 (https://apifox.com)&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--header </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Authorization: Basic dGF5YmN0X3BjOmUxMGFkYzM5NDliYTU5YWJiZTU2ZTA1N2YyMGY4ODNl&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--data-urlencode </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;grant_type=taybct&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--data-urlencode </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;scope=all&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--data-urlencode </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;username=root&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--data-urlencode </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;password=0475e3dd4c5e90bc3854490e7354b6f10a47dd6e1220a0147e0ad42f4428f5a87828597146cbc3c2b8fd3458cda53e9daf21d3aa5c6da8ed31fd256cdf378e17ade31a708f31158c062214126f7fb863d31147038da24f2d59704fbb7783fc2c1b764efad79319&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+k+'" alt="登录成功 🎉🎉🎉" tabindex="0" loading="lazy"><figcaption>登录成功 🎉🎉🎉</figcaption></figure></li></ul><h2 id="启动项目-cloud" tabindex="-1"><a class="header-anchor" href="#启动项目-cloud"><span>启动项目（Cloud）</span></a></h2><h3 id="_1-启动前添加启动-jvm-参数-仅-jdk-17" tabindex="-1"><a class="header-anchor" href="#_1-启动前添加启动-jvm-参数-仅-jdk-17"><span>1. 启动前添加启动 JVM 参数（仅 JDK 17）</span></a></h3><p><a href="#_1-%E5%90%AF%E5%8A%A8%E5%89%8D%E5%85%88%E6%B7%BB%E5%8A%A0%E5%90%AF%E5%8A%A8-jvm-%E5%8F%82%E6%95%B0-%E4%BB%85-jdk-17">参考 Single</a></p><h3 id="_2-启动-1" tabindex="-1"><a class="header-anchor" href="#_2-启动-1"><span>2. 启动</span></a></h3><p>启动如下所选的服务</p><figure><img src="'+b+'" alt="启动" tabindex="0" loading="lazy"><figcaption>启动</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p>可以只启动服务 <code>1</code> <code>2</code> <code>3</code>，以最小化的服务启动</p><p>可以不用启动的服务：</p><ul><li>分布式日志管理（如果添加了 Rabbit MQ 依赖，日志还是会被上传到 Rabbit MQ 上去，可以后面开启日志服务再消费）</li><li>任务调度管理（初始化项目的任务调度只做了记录任务调度日志，这个日志的记录方式同分布式日志）</li><li>文件管理（如果要使用的话再开起来）</li></ul></div><figure><img src="'+u+'" alt="启动成功 🎉🎉🎉" tabindex="0" loading="lazy"><figcaption>启动成功 🎉🎉🎉</figcaption></figure><h3 id="_3-验证-1" tabindex="-1"><a class="header-anchor" href="#_3-验证-1"><span>3. 验证</span></a></h3><p><a href="#_3-%E9%AA%8C%E8%AF%81">参考 Single</a></p><h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端"><span>前端</span></a></h2><p>配置前端项目来使用，目前可以使用的前端项目有：</p><ul><li><a href="https://turtlewxg.github.io/gx-web-doc/" target="_blank" rel="noopener noreferrer">https://turtlewxg.github.io/gx-web-doc/</a></li></ul>',23))])}const F=t(y,[["render",v],["__file","createproject.html.vue"]]),_=JSON.parse('{"path":"/code/taybct/get-started/createproject.html","title":"创建项目","lang":"zh-CN","frontmatter":{"shortTitle":"创建项目","description":"创建项目","index":true,"comment":true,"article":true,"timeline":true,"lastUpdated":true,"editLink":true,"contributors":true,"order":2,"dir":{"order":2},"icon":"material-symbols:create-new-folder","isOriginal":false,"date":"2024-09-25T00:00:00.000Z","category":["代码笔记"],"tag":["后端","Java","SpringBoot","Spring Taybct","开发框架","快速开始","创建项目"],"head":[["meta",{"property":"og:url","content":"https://mangocrisp.github.io/code/taybct/get-started/createproject.html"}],["meta",{"property":"og:site_name","content":"Mango Crisp"}],["meta",{"property":"og:title","content":"创建项目"}],["meta",{"property":"og:description","content":"创建项目"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mangocrisp.github.io/assets/images/blog/newProject1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-27T09:56:35.000Z"}],["meta",{"property":"article:author","content":"Mango Crisp"}],["meta",{"property":"article:tag","content":"后端"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"SpringBoot"}],["meta",{"property":"article:tag","content":"Spring Taybct"}],["meta",{"property":"article:tag","content":"开发框架"}],["meta",{"property":"article:tag","content":"快速开始"}],["meta",{"property":"article:tag","content":"创建项目"}],["meta",{"property":"article:published_time","content":"2024-09-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-27T09:56:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"创建项目\\",\\"image\\":[\\"https://mangocrisp.github.io/assets/images/blog/newProject1.png\\",\\"https://mangocrisp.github.io/assets/images/blog/addarchetype.png\\",\\"https://mangocrisp.github.io/assets/images/blog/addarchetype2.png\\",\\"https://mangocrisp.github.io/assets/images/blog/newpfoject1complete.png\\",\\"https://mangocrisp.github.io/assets/images/blog/fixpom.xml.png\\",\\"https://mangocrisp.github.io/assets/images/blog/vmparams.png\\",\\"https://mangocrisp.github.io/assets/images/blog/startsuccess.png\\",\\"https://mangocrisp.github.io/assets/images/blog/loginsuccess.png\\",\\"https://mangocrisp.github.io/assets/images/blog/startservices.png\\",\\"https://mangocrisp.github.io/assets/images/blog/startsuccess2.png\\"],\\"datePublished\\":\\"2024-09-25T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-27T09:56:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mango Crisp\\",\\"url\\":\\"https://github.com/mangocrisp\\"}]}"]]},"headers":[{"level":2,"title":"使用模板创建项目","slug":"使用模板创建项目","link":"#使用模板创建项目","children":[]},{"level":2,"title":"直接下载源码","slug":"直接下载源码","link":"#直接下载源码","children":[]},{"level":2,"title":"启动项目（Single）","slug":"启动项目-single","link":"#启动项目-single","children":[{"level":3,"title":"1. 启动前先添加启动 JVM 参数（仅 JDK 17）","slug":"_1-启动前先添加启动-jvm-参数-仅-jdk-17","link":"#_1-启动前先添加启动-jvm-参数-仅-jdk-17","children":[]},{"level":3,"title":"2. 启动","slug":"_2-启动","link":"#_2-启动","children":[]},{"level":3,"title":"3. 验证","slug":"_3-验证","link":"#_3-验证","children":[]}]},{"level":2,"title":"启动项目（Cloud）","slug":"启动项目-cloud","link":"#启动项目-cloud","children":[{"level":3,"title":"1. 启动前添加启动 JVM 参数（仅 JDK 17）","slug":"_1-启动前添加启动-jvm-参数-仅-jdk-17","link":"#_1-启动前添加启动-jvm-参数-仅-jdk-17","children":[]},{"level":3,"title":"2. 启动","slug":"_2-启动-1","link":"#_2-启动-1","children":[]},{"level":3,"title":"3. 验证","slug":"_3-验证-1","link":"#_3-验证-1","children":[]}]},{"level":2,"title":"前端","slug":"前端","link":"#前端","children":[]}],"git":{"createdTime":1727205987000,"updatedTime":1727430995000,"contributors":[{"name":"XiJieYin","email":"2415446179@qq.com","commits":1},{"name":"yinxijie","email":"yinxijie@gzgxinfo.com","commits":1}]},"readingTime":{"minutes":4.22,"words":1265},"filePathRelative":"code/taybct/get-started/createproject.md","localizedDate":"2024年9月25日","excerpt":"\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>首先要搞清楚要创建的项目是怎样的一个体量，如果不是特别大的项目，就没必要上微服务，再有，如果不确定，也可以是先单体架构，这样前期好修改和维护，后面如果业务量上来了，模块更多了，再考虑升级微服务</p>\\n</div>\\n<h2>使用模板创建项目</h2>\\n<figure><img src=\\"/assets/images/blog/newProject1.png\\" alt=\\"新建项目\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>新建项目</figcaption></figure>"}');export{F as comp,_ as data};
